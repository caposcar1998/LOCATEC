version: '3.3'

services:
  
  client:
    build:
      context: ../../../
      dockerfile: infra/deploy/frontend/dev/Dockerfile
    ports:
       - "8080:8080"
    container_name: client
    networks:
      - locatec

  database:
      image: mysql
      container_name: database
      restart: always
      ports:
        - '3306:3306'
      #command: --init-file /init.sql
      volumes:
        - ./init.sql:/docker-entrypoint-initdb.d/init.sql
        - ~/apps/mysql:/var/lib/locatec5
      environment:
        MYSQL_ROOT_PASSWORD: root
        MYSQL_USER: test
        MYSQL_PASSWORD: test
        MYSQL_ROOT_HOST: '%'
        TIMEZONE: UTC

      networks:
        - locatec

  server:
    build: 
      context: ../../../
      dockerfile: infra/deploy/backend/dev/Dockerfile
    restart: always
    ports:
      - "5000:5000"
    container_name: server
    networks:
      - locatec
    depends_on:
      - database
  prometheus:
      image: prom/prometheus:latest
      restart: unless-stopped
      container_name: prometheus
      ports:
        - "9090:9090"
      volumes:
        - ../monitoring/prometheus.yml:/etc/prometheus/prometheus.yml
      command:
        - '--config.file=/etc/prometheus/prometheus.yml'
      networks:
        - locatec

  grafana:
      image: grafana/grafana:latest
      restart: unless-stopped
      user: "472"
      container_name: grafana
      depends_on:
        - prometheus
      ports:
        - "3000:3000"
      volumes:
        - ./monitoring/datasource.yml:/etc/grafana/provisioning/datasource.yml
      env_file:
        - ../monitoring/config.monitoring
      networks:
        - locatec

  nginx:
    depends_on:
      - grafana
      - prometheus
      - server
      - database
      - client
    restart: always
    build:
      dockerfile: Dockerfile
      context: ../nginx
    expose:
      - 80
      - 3000
    networks:
      - locatec


networks:
  locatec: